version: '3'

services:
  api:
    image: ramdocker555/task-api-spring
    build:
      context: ./task-api-spring
      args:
        DEPENDENCY: build/dependency
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db-projectionstore:3306/task-manager?useSSL=false
      EVENTSTORE_DATASOURCE_URL: jdbc:mysql://db-eventstore:3306/eventstore?useSSL=false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL57Dialect
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_MAP_ENTRY_TTL: 3000
      REDIS_SERVER_ADDRESS:  redis://redis:6379
      REDIS_SERVER_NODE_CONFIG: SINGLE
      REDIS_AGGREGATE_CACHING_ENABLED: "true"
    ports:
      - "8000:8000"
    depends_on:
      - db-projectionstore
      - db-eventstore    

  consumer:
    image: ramdocker555/task-consumer-spring
    build:
      context: ./task-consumer-spring
      args:
        DEPENDENCY: build/dependency
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db-projectionstore:3306/task-manager?useSSL=false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL57Dialect
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CONSUMER_THREADS: 2
    depends_on:
      - db-projectionstore
      - kafka

  db-projectionstore:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: task-manager
      MYSQL_USER: task
      MYSQL_PASSWORD: manager
      TZ: UTC
    ports:
      - "3316:3306"

  db-eventstore:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eventstore
      MYSQL_USER: event
      MYSQL_PASSWORD: store
      TZ: UTC
    ports:
      - "3306:3306"
      
  redis: 
    image: "redis:alpine"
    command: [ "redis-server"] 
    environment:
      ALLOW_EMPTY_PASSWORD: "true"
    ports: 
      - "6379:6379"
                 

  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: "confluentinc/cp-kafka:5.2.1"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    ports:
      - "9092:9092"
